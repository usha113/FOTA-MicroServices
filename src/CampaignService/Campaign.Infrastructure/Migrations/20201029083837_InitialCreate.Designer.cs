// <auto-generated />
using System;
using Campaign.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Campaign.Infrastructure.Migrations
{
    [DbContext(typeof(CampaignContext))]
    [Migration("20201029083837_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Campaign.Core.Entities.Approver", b =>
                {
                    b.Property<long>("approver_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("approver_name")
                        .HasColumnType("text");

                    b.HasKey("approver_id");

                    b.ToTable("Approver");
                });

            modelBuilder.Entity("Campaign.Core.Entities.Campaign", b =>
                {
                    b.Property<long>("campaign_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("approval_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short?>("approval_status")
                        .HasColumnType("smallint");

                    b.Property<int>("approver_id")
                        .HasColumnType("integer");

                    b.Property<long?>("approver_id1")
                        .HasColumnType("bigint");

                    b.Property<string>("campaign_desc")
                        .HasColumnType("text");

                    b.Property<DateTime>("campaign_end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("campaign_name")
                        .HasColumnType("text");

                    b.Property<DateTime>("campaign_start_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ecu_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("firmware_id")
                        .HasColumnType("bigint");

                    b.Property<short?>("is_active")
                        .HasColumnType("smallint");

                    b.Property<long?>("vehiclegroup_id")
                        .HasColumnType("bigint");

                    b.HasKey("campaign_id");

                    b.HasIndex("approver_id1");

                    b.HasIndex("ecu_id");

                    b.HasIndex("firmware_id");

                    b.HasIndex("vehiclegroup_id");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("Campaign.Core.Entities.ECU", b =>
                {
                    b.Property<long>("ecu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ECUTypeecu_type_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("blocks")
                        .HasColumnType("bigint");

                    b.Property<string>("ecu_model")
                        .HasColumnType("text");

                    b.Property<long>("ecu_type_id")
                        .HasColumnType("bigint");

                    b.HasKey("ecu_id");

                    b.HasIndex("ECUTypeecu_type_id");

                    b.ToTable("ECU");
                });

            modelBuilder.Entity("Campaign.Core.Entities.ECUType", b =>
                {
                    b.Property<long>("ecu_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ecu_type_name")
                        .HasColumnType("text");

                    b.HasKey("ecu_type_id");

                    b.ToTable("ECUType");
                });

            modelBuilder.Entity("Campaign.Core.Entities.Firmware", b =>
                {
                    b.Property<long>("firmware_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("current_firmware_link")
                        .HasColumnType("text");

                    b.Property<string>("current_firmware_version")
                        .HasColumnType("text");

                    b.Property<string>("firmware_Name")
                        .HasColumnType("text");

                    b.Property<string>("previous_firmware_link")
                        .HasColumnType("text");

                    b.Property<string>("previous_firmware_version")
                        .HasColumnType("text");

                    b.HasKey("firmware_id");

                    b.ToTable("Firmware");
                });

            modelBuilder.Entity("Campaign.Core.Entities.Vehicle", b =>
                {
                    b.Property<long>("vehicle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("data_origin")
                        .HasColumnType("text");

                    b.Property<long?>("ecu_id")
                        .HasColumnType("bigint");

                    b.Property<string>("vehicle_model")
                        .HasColumnType("text");

                    b.Property<string>("vehicle_registration_number")
                        .HasColumnType("text");

                    b.Property<long>("vehicle_year")
                        .HasColumnType("bigint");

                    b.HasKey("vehicle_id");

                    b.HasIndex("ecu_id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Campaign.Core.Entities.VehicleECU", b =>
                {
                    b.Property<long>("vehicle_ecu_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("ecu_id")
                        .HasColumnType("bigint");

                    b.Property<long>("vehicle_id")
                        .HasColumnType("bigint");

                    b.HasKey("vehicle_ecu_id");

                    b.ToTable("VehicleECU");
                });

            modelBuilder.Entity("Campaign.Core.Entities.VehicleGroup", b =>
                {
                    b.Property<long>("vehiclegroup_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("VehicleGroupName")
                        .HasColumnType("text");

                    b.HasKey("vehiclegroup_id");

                    b.ToTable("VehicleGroup");
                });

            modelBuilder.Entity("Campaign.Core.Entities.Campaign", b =>
                {
                    b.HasOne("Campaign.Core.Entities.Approver", "approver")
                        .WithMany()
                        .HasForeignKey("approver_id1");

                    b.HasOne("Campaign.Core.Entities.ECU", "ECU")
                        .WithMany("Campaign")
                        .HasForeignKey("ecu_id");

                    b.HasOne("Campaign.Core.Entities.Firmware", "Firmware")
                        .WithMany("Campaign")
                        .HasForeignKey("firmware_id");

                    b.HasOne("Campaign.Core.Entities.VehicleGroup", "VehicleGroup")
                        .WithMany("Campaign")
                        .HasForeignKey("vehiclegroup_id");
                });

            modelBuilder.Entity("Campaign.Core.Entities.ECU", b =>
                {
                    b.HasOne("Campaign.Core.Entities.ECUType", "ECUType")
                        .WithMany("ECU")
                        .HasForeignKey("ECUTypeecu_type_id");
                });

            modelBuilder.Entity("Campaign.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("Campaign.Core.Entities.ECU", "ECU")
                        .WithMany("Vehicles")
                        .HasForeignKey("ecu_id");
                });
#pragma warning restore 612, 618
        }
    }
}
